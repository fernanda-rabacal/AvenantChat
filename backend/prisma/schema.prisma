generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id_user    Int      @id @default(autoincrement())
  email      String   @unique
  name       String
  avatar_url String?
  password   String
  created_at DateTime @default(now())

  chat_rooms      ChatRoom[]
  ChatRoomMembers ChatRoomMember[]

  @@map("users")
}

model ChatRoom {
  id_chat_room  Int      @id @default(autoincrement())
  name          String   @db.VarChar(255)
  category      String
  description   String?
  created_at    DateTime @default(now())
  created_by_id Int

  created_by      User             @relation(fields: [created_by_id], references: [id_user])
  ChatRoomMembers ChatRoomMember[]

  @@map("chat_rooms")
}

model ChatRoomMember {
  id_chat_room_member Int @id @default(autoincrement())
  id_user             Int
  id_chat_room        Int

  user         User           @relation(fields: [id_user], references: [id_user])
  chat_room    ChatRoom       @relation(fields: [id_chat_room], references: [id_chat_room])
  ChatMessages ChatMessages[]

  @@unique([id_user, id_chat_room])
  @@index([id_chat_room])
  @@index([id_user])
  @@map("chat_room_members")
}

model ChatMessages {
  id_message          Int      @id @default(autoincrement())
  content             String   @db.VarChar()
  sent_at             DateTime @default(now())
  edited_at           DateTime?
  is_deleted          Boolean  @default(false)
  id_chat_room_member Int

  chat_room_member ChatRoomMember @relation(fields: [id_chat_room_member], references: [id_chat_room_member])

  @@index([id_chat_room_member, sent_at])
  @@map("chat_messages")
}
